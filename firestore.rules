rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow users to read/write their own profile data
    match /users/{userId} {
      allow read: if request.auth != null; // Anyone logged in can read profiles (for finding mentors/mentees)
      allow create: if request.auth.uid == userId; // Only the user can create their own document
      allow update: if request.auth.uid == userId; // Only the user can update their own profile
      // Allow delete? Generally not recommended for user profiles.
      // allow delete: if request.auth.uid == userId;
    }

    // Rules for Conversations
    match /conversations/{conversationId} {
      // Allow read/write only if the requesting user is part of the conversation
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      // Rules for Messages subcollection
      match /messages/{messageId} {
        // Allow read only if the user is part of the parent conversation
        allow read: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[0] == request.auth.uid
                      || get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[1] == request.auth.uid;

        // Allow create only if the sender is the authenticated user
        // and they are part of the conversation.
        allow create: if request.auth != null && request.resource.data.senderUid == request.auth.uid
                       && (get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[0] == request.auth.uid
                           || get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[1] == request.auth.uid);

        // Disallow update/delete for messages to maintain chat history integrity
        allow update, delete: if false;
      }
    }

    // Allow read/write reviews for universities (authenticated users)
    match /universities/{universityId}/reviews/{reviewId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.alumniId;
      allow update: if request.auth != null && request.auth.uid == resource.data.alumniId;
      allow delete: if false;
    }
  }
}
